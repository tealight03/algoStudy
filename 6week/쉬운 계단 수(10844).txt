1) 문제 인식
인접한 자릿수의 간격이 모두 1인 수를 계단 수라고 정의할 때
숫자의 길이 n이 주어질 때, 길이가 n인 숫자 중 계단 수가 몇 개 있는지 구하는 문제입니다.

2) 문제 유형 파악
길이가 1인 경우
1, 2, 3, 4, 5, 6, 7, 8, 9
=> 총 9개

길이가 2인 경우
10, 12, 21, 23, 32, 34, 43, 45, 54, 56, 65, 67, 76, 78, 87, 89, 98
=> 총 17개
...

이런 식으로 갯수를 세어나갈 수 있다

규칙을 찾아보면
1. 0이 온 경우는 제외
2. 9의 경우 8밖에 올 수 없음
3. 그 외에는 +-로 2가지씩 가짓수를 가질 수 있다

총 3가지 규칙을 추출할 수 있다

따라서 알고리즘을 짤 때 위 규칙들을 고려하여 짜면 값을 구할 수 있습니다.

3) 알고리즘(슈도 코드)
n = int(input())

dp = [[0]*10 for _ in range(n+1)]
for i in range(1, 10): # 리스트 초기화 작업
    dp[1][i] = 1

mod = 1000000000

for i in range(2, n+1):
    for j in range(10):
        if j == 0: # 0이 온 경우
            dp[i][j] = dp[i-1][1]
        elif j == 9: # 9가 온 경우
            dp[i][j] = dp[i-1][8]
        else: # 기타
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1] 

print(sum(dp[n]) % mod) # 결과 출력