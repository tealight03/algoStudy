1) 문제 인식
구하는 횟수 test를 입력받아서 피보나치 수열의 각 번호별 값을 구할 때
각각 0과 1을 몇 번 호출하게 되는지 그 횟수를 test번 구하는 문제입니다.

2) 문제 유형 파악 
다이나믹 프로그래밍(DP)과 피보나치 수열 계산법을 응용하는 문제입니다.
입력된 수가 0과 1인 경우 그 수가 0과 1을 호출하는 횟수를 각각 리스트 형식으로 저장하고
2 이상의 수가 입력된 경우 이전 수의 0과 1을 호출한 횟수를 각각 더해서 구하는 방식으로 
해당 번호의 0과 1 호출 횟수를 구하면 됩니다.

3) 알고리즘(슈도 코드)
test = int(input()) # 테스트 횟수 입력

for _ in range(test):
    num = int(input())
    dp = [[0,0] for i in range(num+1)] # dp리스트 생성
    if num == 0: # 0인 경우
        dp[0][0]= 1
        dp[0][1]= 0
    elif num == 1: # 1인 경우
        dp[1][1] = 1
        dp[1][0] = 0
    elif num >= 2: # 2 이상인 경우
        dp[0][0] = dp[1][1] = 1
        dp[0][1] = dp[1][0] = 0

        for i in range(2, num+1): # dp로 호출 횟수 계산
            dp[i][0] = dp[i-2][0] + dp[i-1][0]
            dp[i][1] = dp[i-2][1] + dp[i-1][1]

    print(f"{dp[num][0]} {dp[num][1]}") # 결과 출력