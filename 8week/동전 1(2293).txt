1) 문제 인식
n가지 종류의 동전이 주어질 때, 각 동전을 조합한 가치의 합이 k원이 되는 경우를 구하는 문제입니다.
단, 사용된 동전의 순서가 다르더라도 동전의 구성이 동일하다면 같은 경우로 취급하여 셈해야합니다.

2) 문제 유형 파악
예제로 주어진 데이터를 이용해 아래와 같이 점화식을 추론합니다.

1원을 만들 경우, (1) => 1가지
2원을 만들 경우, (1, 1), (2) => 2가지
3원을 만들 경우, (1, 1, 1), (1, 2) => 2가지
4원을 만들 경우, (1, 1, 1, 1), (1, 1, 2), (2, 2) => 3가지
...

분석해보면 3원을 만드는 경우는 1원을 만드는 경우에 2원을 사용한 경우를 포함하고,
4원을 만드는 경우는 2원을 만드는 경우에 2원을 사용한 경우를 포함한 경우의 수와 동일하므로
점화식을 
dp[i] += dp[i - coin]
와 같이 추론해낼 수 있습니다.

3) 알고리즘(슈도 코드)
n, k = map(int, input().split()) # n, k 입력
coins = []
for _ in range(n):
    coins.append(int(input())) # 동전 종류 입력

dp = [0] * (k+1)
dp[0] = 1

for coin in coins:
    for i in range(coin, k+1): # 점화식 적용
        possible_cases = dp[i - coin]
        dp[i] += possible_cases

print(dp[k])