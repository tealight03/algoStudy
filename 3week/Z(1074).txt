1) 문제 인식
재귀적으로 Z자 모양으로 2차원 배열의 데이터를 탐색하는 함수를 만들어
(r,c)의 데이터를 몇 번째로 탐색하는지 출력하는 문제입니다.

2) 문제 유형 파악
분할정복과 재귀를 이용하는 유형으로, 2차원 배열을 좌표평면으로 생각해
매번 4분할하는 작업을 재귀로 동작하게 하여 좌표들 간의 규칙을 이용해서
재귀적으로 문제에서 주어진 좌표의 탐색 순서를 찾는 문제입니다.


3) 알고리즘(슈도 코드)
N, r, c = map(int, input().split())

ans = 0

while N != 0: # 2차원 배열을 n x n 크기의 사분면으로 매번 분할
	N -= 1

    # 좌표가 제 1사분면에 위치할 때
	if r < 2 ** N and c < 2 ** N:
		ans += ( 2 ** N ) * ( 2 ** N ) * 0

    # 좌표가 제 2사분면에 위치할 때
	elif r < 2 ** N and c >= 2 ** N: 
		ans += ( 2 ** N ) * ( 2 ** N ) * 1
		c -= ( 2 ** N )

    # 좌표가 제 3사분면에 위치할 때
	elif r >= 2 ** N and c < 2 ** N: 
		ans += ( 2 ** N ) * ( 2 ** N ) * 2
		r -= ( 2 ** N )

    # 좌표가 제 4사분면에 위치할 때
	else:
		ans += ( 2 ** N ) * ( 2 ** N ) * 3
		r -= ( 2 ** N )
		c -= ( 2 ** N )
    
print(ans)